{"version":3,"sources":["components/Slider.js","components/InfobarItem.js","components/DownloadImg.js","App.js","reportWebVitals.js","index.js"],"names":["Slider","_ref","min","max","value","handleChange","react_default","a","createElement","className","type","onChange","InfobarItem","name","active","handleClick","concat","onClick","downloadAsJpeg","node","document","getElementById","domtoimage","toJpeg","quality","then","dataUrl","link","download","href","click","DEFAULT_OPTIONS","property","range","unit","App","_useState","useState","_useState2","Object","slicedToArray","selectedOptionIndex","setSelectedOptionIndex","_useState3","_useState4","options","setOptions","_useState5","_useState6","selectedImg","setSelectedImg","_useState7","_useState8","visible","setVisible","selectedOption","getImgStyle","filters","map","option","transform","join","filter","style","display","e","target","files","alt","id","objectSpread","src","URL","createObjectURL","index","key","window","location","reload","components_Slider","prevOptions","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b0615721.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Slider({min, max, value, handleChange}){\r\n    \r\n    return(\r\n        <div className=\"slider-container\">\r\n            <input type=\"range\" className=\"slider\" min={min} max={max} value={value} onChange={handleChange}></input>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nexport default function InfobarItem({name, active, handleClick}){\r\n    return(\r\n        <div>\r\n            <button className={`infobar-item ${active ? 'active' : ''}`} onClick={handleClick}>{name}</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport domtoimage from 'dom-to-image-more';\r\n\r\nfunction downloadAsJpeg(){\r\n    let node = document.getElementById('upload-image');\r\n    domtoimage.toJpeg(node, { quality: 0.95 })\r\n    .then(function (dataUrl) {\r\n        var link = document.createElement('a');\r\n        link.download = 'my-new-image.jpeg';\r\n        link.href = dataUrl;\r\n        link.click();\r\n    });\r\n  }\r\n\r\n  export default downloadAsJpeg;","import React, {useState, useLocation} from 'react';\r\nimport './App.css';\r\nimport Slider from './components/Slider';\r\nimport InfobarItem from './components/InfobarItem';\r\nimport downloadAsJpeg from './components/DownloadImg'\r\n\r\n\r\n//style options\r\nconst DEFAULT_OPTIONS =[\r\n  { name:\"Brightness\", property:\"brightness\", type:\"filter\", value: 100, range:{min:0, max:200}, unit: '%'},\r\n  { name:\"Contrast\", property:\"contrast\", type:\"filter\", value: 100, range:{min:0, max:200}, unit: '%'},\r\n  { name:\"Saturation\", property:\"saturate\", type:\"filter\", value: 100, range:{min:0, max:200}, unit: '%'},\r\n  { name:\"Greyscale\", property:\"grayscale\", type:\"filter\", value: 0, range:{min:0, max:100}, unit: '%'},\r\n  { name:\"Sepia\", property:\"sepia\", type:\"filter\", value: 0, range:{min:0, max:100}, unit: '%'},\r\n  { name:\"Hue Rotate\", property:\"hue-rotate\", type:\"filter\", value: 0, range:{min:0, max:360}, unit: 'deg'},\r\n  { name:\"Blur\", property:\"blur\", type:\"filter\", value: 0, range:{min:0, max:20}, unit: 'px'},\r\n  { name:\"Invert\", property:\"invert\", type:\"filter\", value: 0, range:{min:0, max:100}, unit: '%'},\r\n  { name:\"Opacity\", property:\"opacity\", type:\"filter\",value: 100, range:{min:0, max:100}, unit: '%'},\r\n  { name:\"Skew\", property:\"skew\", type:\"transform\",value: 0, range:{min:0, max:360}, unit: 'deg'},\r\n  { name:\"Rotate X\", property:\"rotateX\", type:\"transform\",value: 0, range:{min:0, max:360}, unit: 'deg'},\r\n  { name:\"Rotate Y\", property:\"rotateY\", type:\"transform\",value: 0, range:{min:0, max:360}, unit: 'deg'}\r\n]\r\n\r\nfunction App() {\r\n\r\n\r\n  //states\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0);\r\n  const [options, setOptions] = useState(DEFAULT_OPTIONS);\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n  const [visible, setVisible] = useState(true);\r\n  const selectedOption = options[selectedOptionIndex];\r\n\r\n\r\n //Creates styles from default options\r\n  function getImgStyle(){\r\n    const filters = options.map(option=>{\r\n      if(option.type===\"filter\")\r\n       return `${option.property}(${option.value}${option.unit})`\r\n    })\r\n    const transforms = options.map(option=>{\r\n      if(option.type===\"transform\")\r\n       return `${option.property}(${option.value}${option.unit})`\r\n    })  \r\n    return [{transform:transforms.join(' ')},  {filter:filters.join(' ')}];\r\n  };\r\n\r\n  \r\n  //applys the silder to current style\r\n  function handleSliderChange ({target}){\r\n    setOptions(prevOptions =>{\r\n      return prevOptions.map((option, index)=>{\r\n        if(index!== selectedOptionIndex) return option\r\n        return {...option, value:target.value}\r\n      })\r\n    })\r\n  }\r\n\r\n  //restart the page \r\n  function resetPage(){\r\n    window.location.reload()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>Photo Editor</h1>\r\n      </div>\r\n      <div className=\"upload-conatiner\" style={{display: visible ? 'flex' : 'none'}}>\r\n          <h2>Upload Your Photo To Get Started!</h2>\r\n      <input type=\"file\" onChange={(e) =>{\r\n        setVisible(false)\r\n        setSelectedImg(e.target.files[0])\r\n      }} />\r\n      </div>  \r\n      {selectedImg && (\r\n          <img alt=\"Your upload\" id = \"upload-image\" className=\"upload-image\" style={{...getImgStyle()[0],...getImgStyle()[1]}} src={URL.createObjectURL(selectedImg)}/>\r\n      )}\r\n      <div className=\"infobar\">\r\n        {options.map((option, index) =>{\r\n         return (<InfobarItem key={index} name={option.name} active={index===selectedOptionIndex} handleClick={()=> setSelectedOptionIndex(index)} />)\r\n        })}\r\n        <button onClick={downloadAsJpeg}>Download Your Image</button>\r\n        <button onClick={resetPage} className=\"warning\">Reset Page</button>\r\n      </div>\r\n      <Slider min={selectedOption.range.min} max={selectedOption.range.max} value={selectedOption.value} handleChange={handleSliderChange}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}